{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Libro } from '../model/libro.model';\nexport let LibrosComponent = class LibrosComponent {\n  constructor(libroService, reservaService, router, cdr // Inyecta ChangeDetectorRef\n  ) {\n    this.libroService = libroService;\n    this.reservaService = reservaService;\n    this.router = router;\n    this.cdr = cdr;\n    this.libros = [];\n    this.nombreBusqueda = '';\n    this.mostrarFormulario = false;\n    this.nuevoLibro = new Libro(0, '', '', 0, '');\n  }\n  ngOnInit() {\n    this.obtenerLibros();\n  }\n  obtenerLibros() {\n    this.libroService.obtenerTodosLosLibros().subscribe(libros => {\n      console.log('Todos los libros:', libros);\n      this.libros = libros;\n    }, error => {\n      console.error('Error al obtener todos los libros:', error);\n    });\n  }\n  buscarLibrosPorNombre() {\n    console.log('Buscando libros con el nombre:', this.nombreBusqueda);\n    if (this.nombreBusqueda) {\n      this.libroService.buscarLibrosPorTitulo(this.nombreBusqueda).subscribe(respuesta => {\n        const libros = Array.isArray(respuesta) ? respuesta : [respuesta];\n        console.log('Libros encontrados:', libros);\n        if (libros.length > 0) {\n          this.libroBuscado = libros[0];\n          console.log('Libro buscado actualizado:', this.libroBuscado);\n        } else {\n          this.libroBuscado = undefined;\n          console.log('No se encontraron libros con el nombre:', this.nombreBusqueda);\n        }\n      }, error => {\n        console.error('Error al buscar libros por título:', error);\n      });\n    } else {\n      this.libroBuscado = undefined;\n      this.obtenerLibros();\n    }\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  getImagenUrl(imagen) {\n    return `http://localhost:8086/api/libros/images/${imagen}`;\n  }\n  reservarLibro(libro) {\n    const usuarioId = 1; // Asigna el ID del usuario actualmente logueado\n    if (libro.ejemplaresDisponibles > 0) {\n      this.reservaService.reservarLibro(libro.id, usuarioId).subscribe(() => {\n        // Crear una nueva referencia del array de libros para forzar la detección de cambios\n        const librosActualizados = this.libros.map(l => {\n          if (l.id === libro.id) {\n            return {\n              ...l,\n              ejemplaresDisponibles: l.ejemplaresDisponibles - 1\n            };\n          }\n          return l;\n        });\n        this.libros = librosActualizados;\n        this.cdr.detectChanges(); // Forzar la detección de cambios\n      }, error => {\n        console.error('Error al reservar libro:', error);\n      });\n    } else {\n      alert(`No hay ejemplares disponibles para el libro ${libro.titulo}.`);\n    }\n  }\n  mostrarFormularioAgregar() {\n    this.mostrarFormulario = true;\n  }\n  cerrarFormularioAgregar() {\n    this.mostrarFormulario = false;\n  }\n  volverALibros() {\n    this.libroBuscado = undefined;\n  }\n  agregarLibro() {\n    const formData = new FormData();\n    formData.append('libro', new Blob([JSON.stringify(this.nuevoLibro)], {\n      type: 'application/json'\n    }));\n    formData.append('imagen', this.selectedFile);\n    this.libroService.crearLibro(formData).subscribe(libro => {\n      this.libros.push(libro);\n      this.cerrarFormularioAgregar();\n    }, error => {\n      console.error('Error al agregar libro:', error);\n    });\n  }\n};\nLibrosComponent = __decorate([Component({\n  selector: 'app-libros',\n  templateUrl: './libros.component.html'\n})], LibrosComponent);","map":{"version":3,"names":["Component","Libro","LibrosComponent","constructor","libroService","reservaService","router","cdr","libros","nombreBusqueda","mostrarFormulario","nuevoLibro","ngOnInit","obtenerLibros","obtenerTodosLosLibros","subscribe","console","log","error","buscarLibrosPorNombre","buscarLibrosPorTitulo","respuesta","Array","isArray","length","libroBuscado","undefined","onFileSelected","event","selectedFile","target","files","getImagenUrl","imagen","reservarLibro","libro","usuarioId","ejemplaresDisponibles","id","librosActualizados","map","l","detectChanges","alert","titulo","mostrarFormularioAgregar","cerrarFormularioAgregar","volverALibros","agregarLibro","formData","FormData","append","Blob","JSON","stringify","type","crearLibro","push","__decorate","selector","templateUrl"],"sources":["C:\\Users\\Juanma\\Documents\\GitHub\\librotech\\src\\app\\componentes\\libros.component.ts"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Libro } from '../model/libro.model';\r\nimport { LibroService } from '../services/libro.service';\r\nimport { ReservaService } from '../services/reserva.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-libros',\r\n  templateUrl: './libros.component.html'\r\n})\r\nexport class LibrosComponent implements OnInit {\r\n\r\n  libros: Libro[] = [];\r\n  nombreBusqueda: string = '';\r\n  libroBuscado: Libro | undefined;\r\n  mostrarFormulario: boolean = false;\r\n  nuevoLibro: Libro = new Libro(0, '', '', 0, '');\r\n  selectedFile!: File;\r\n\r\n  constructor(\r\n    private libroService: LibroService,\r\n    private reservaService: ReservaService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef // Inyecta ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.obtenerLibros();\r\n  }\r\n\r\n  obtenerLibros(): void {\r\n    this.libroService.obtenerTodosLosLibros().subscribe(\r\n      libros => {\r\n        console.log('Todos los libros:', libros);\r\n        this.libros = libros;\r\n      },\r\n      error => {\r\n        console.error('Error al obtener todos los libros:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  buscarLibrosPorNombre(): void {\r\n    console.log('Buscando libros con el nombre:', this.nombreBusqueda);\r\n  \r\n    if (this.nombreBusqueda) {\r\n      this.libroService.buscarLibrosPorTitulo(this.nombreBusqueda).subscribe(\r\n        (respuesta: any) => {\r\n          const libros = Array.isArray(respuesta) ? respuesta : [respuesta];\r\n          console.log('Libros encontrados:', libros);\r\n  \r\n          if (libros.length > 0) {\r\n            this.libroBuscado = libros[0];\r\n            console.log('Libro buscado actualizado:', this.libroBuscado);\r\n          } else {\r\n            this.libroBuscado = undefined;\r\n            console.log('No se encontraron libros con el nombre:', this.nombreBusqueda);\r\n          }\r\n        },\r\n        error => {\r\n          console.error('Error al buscar libros por título:', error);\r\n        }\r\n      );\r\n    } else {\r\n      this.libroBuscado = undefined;\r\n      this.obtenerLibros();\r\n    }\r\n  }\r\n\r\n  onFileSelected(event: any): void {\r\n    this.selectedFile = event.target.files[0];\r\n  }\r\n\r\n  getImagenUrl(imagen: string): string {\r\n    return `http://localhost:8086/api/libros/images/${imagen}`;\r\n  }\r\n\r\n  reservarLibro(libro: Libro): void {\r\n    const usuarioId = 1; // Asigna el ID del usuario actualmente logueado\r\n    if (libro.ejemplaresDisponibles > 0) {\r\n      this.reservaService.reservarLibro(libro.id, usuarioId).subscribe(\r\n        () => {\r\n          // Crear una nueva referencia del array de libros para forzar la detección de cambios\r\n          const librosActualizados = this.libros.map(l => {\r\n            if (l.id === libro.id) {\r\n              return { ...l, ejemplaresDisponibles: l.ejemplaresDisponibles - 1 };\r\n            }\r\n            return l;\r\n          });\r\n          this.libros = librosActualizados;\r\n          this.cdr.detectChanges(); // Forzar la detección de cambios\r\n        },\r\n        error => {\r\n          console.error('Error al reservar libro:', error);\r\n        }\r\n      );\r\n    } else {\r\n      alert(`No hay ejemplares disponibles para el libro ${libro.titulo}.`);\r\n    }\r\n  }\r\n\r\n  mostrarFormularioAgregar(): void {\r\n    this.mostrarFormulario = true;\r\n  }\r\n\r\n  cerrarFormularioAgregar(): void {\r\n    this.mostrarFormulario = false;\r\n  }\r\n  \r\n  volverALibros(): void {\r\n    this.libroBuscado = undefined;\r\n  }\r\n\r\n  agregarLibro(): void {\r\n    const formData: FormData = new FormData();\r\n    formData.append('libro', new Blob([JSON.stringify(this.nuevoLibro)], { type: 'application/json' }));\r\n    formData.append('imagen', this.selectedFile);\r\n  \r\n    this.libroService.crearLibro(formData).subscribe(\r\n      (libro: Libro) => {\r\n        this.libros.push(libro);\r\n        this.cerrarFormularioAgregar();\r\n      },\r\n      error => {\r\n        console.error('Error al agregar libro:', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}