{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LibroService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8086/api/usuario/libros';\n  }\n  obtenerTodosLosLibros() {\n    return this.http.get(this.apiUrl);\n  }\n  buscarLibrosPorTitulo(titulo) {\n    const url = `${this.apiUrl}/titulo/${titulo}`;\n    return this.http.get(url).pipe(catchError(error => {\n      console.error('Error en la solicitud HTTP:', error);\n      return throwError(error);\n    }));\n  }\n  buscarLibrosPorAutor(autor) {\n    const url = `${this.apiUrl}/autor/${autor}`;\n    return this.http.get(url).pipe(catchError(error => {\n      console.error('Error en la solicitud HTTP:', error);\n      return throwError(error);\n    }));\n  }\n  crearLibro(libro) {\n    return this.http.post(this.apiUrl, libro);\n  }\n  static #_ = this.ɵfac = function LibroService_Factory(t) {\n    return new (t || LibroService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LibroService,\n    factory: LibroService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["throwError","catchError","LibroService","constructor","http","apiUrl","obtenerTodosLosLibros","get","buscarLibrosPorTitulo","titulo","url","pipe","error","console","buscarLibrosPorAutor","autor","crearLibro","libro","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Juanma\\Documents\\GitHub\\librotech\\src\\app\\services\\libro.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Libro } from '../model/libro.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LibroService {\r\n  private apiUrl = 'http://localhost:8086/api/usuario/libros';\r\n  snackBar: any;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  obtenerTodosLosLibros(): Observable<Libro[]> {\r\n    return this.http.get<Libro[]>(this.apiUrl);\r\n  }\r\n\r\n  buscarLibrosPorTitulo(titulo: string): Observable<Libro[]> {\r\n    const url = `${this.apiUrl}/titulo/${titulo}`;\r\n    return this.http.get<Libro[]>(url).pipe(\r\n      catchError(error => {\r\n        console.error('Error en la solicitud HTTP:', error);\r\n        return throwError(error); \r\n      })\r\n    );\r\n  }\r\n  buscarLibrosPorAutor(autor: string): Observable<Libro[]> {\r\n    const url = `${this.apiUrl}/autor/${autor}`;\r\n    return this.http.get<Libro[]>(url).pipe(\r\n      catchError(error => {\r\n        console.error('Error en la solicitud HTTP:', error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  crearLibro(libro:Libro): Observable<Libro> {\r\n    return this.http.post<Libro>(this.apiUrl, libro);\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAM3C,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,0CAA0C;EAGnB;EAExCC,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC;EAC5C;EAEAG,qBAAqBA,CAACC,MAAc;IAClC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,WAAWI,MAAM,EAAE;IAC7C,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAUG,GAAG,CAAC,CAACC,IAAI,CACrCV,UAAU,CAACW,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAOZ,UAAU,CAACY,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EACAE,oBAAoBA,CAACC,KAAa;IAChC,MAAML,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,UAAUU,KAAK,EAAE;IAC3C,OAAO,IAAI,CAACX,IAAI,CAACG,GAAG,CAAUG,GAAG,CAAC,CAACC,IAAI,CACrCV,UAAU,CAACW,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAOZ,UAAU,CAACY,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAEAI,UAAUA,CAACC,KAAW;IACpB,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAQ,IAAI,CAACb,MAAM,EAAEY,KAAK,CAAC;EAClD;EAAC,QAAAE,CAAA,G;qBA/BUjB,YAAY,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZtB,YAAY;IAAAuB,OAAA,EAAZvB,YAAY,CAAAwB,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}