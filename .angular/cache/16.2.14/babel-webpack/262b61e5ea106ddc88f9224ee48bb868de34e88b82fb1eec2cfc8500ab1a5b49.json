{"ast":null,"code":"import { Credentials } from '../model/credentials.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.credentials = new Credentials('', '', '');\n  }\n  onRegister() {\n    this.authService.register(this.credentials.username, this.credentials.password, this.credentials.email).subscribe(data => {\n      this.router.navigate(['/libros']);\n      console.log(\"Usuario registrado exitosamente\", data);\n    }, error => {\n      console.error(\"Error al registrar usuario\", error);\n    });\n  }\n  switchToLogin() {\n    this.router.navigate(['/login']);\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 34,\n    vars: 3,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"mx-auto\", \"form-container\"], [1, \"form-title\"], [3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"registerUsername\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"registerUsername\", \"name\", \"registerUsername\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"registerPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"registerPassword\", \"name\", \"registerPassword\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"registerMail\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"registerMail\", \"name\", \"registerMail\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-block\"], [1, \"text-center\", \"mt-3\"], [\"routerLink\", \"/login\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"LibroTech - Registro\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3)(8, \"div\", 4)(9, \"div\", 5)(10, \"h1\", 6);\n        i0.ɵɵtext(11, \"LibroTech\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"h2\", 6);\n        i0.ɵɵtext(13, \"Registro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"form\", 7, 8);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_14_listener() {\n          return ctx.onRegister();\n        });\n        i0.ɵɵelementStart(16, \"div\", 9)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.credentials.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 9)(21, \"label\", 12);\n        i0.ɵɵtext(22, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.credentials.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 9)(25, \"label\", 14);\n        i0.ɵɵtext(26, \"Mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_27_listener($event) {\n          return ctx.credentials.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"button\", 16);\n        i0.ɵɵtext(29, \"Register\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"p\", 17);\n        i0.ɵɵtext(31, \"\\u00BFYa tienes cuenta? \");\n        i0.ɵɵelementStart(32, \"a\", 18);\n        i0.ɵɵtext(33, \"Logueate aqu\\u00ED\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.email);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"body[_ngcontent-%COMP%] {\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      height: 100vh;\\n      background-color: #f8f9fa;\\n    }\\n    .form-container[_ngcontent-%COMP%] {\\n      max-width: 400px;\\n      padding: 20px;\\n      border-radius: 10px;\\n      background-color: #fff;\\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\\n    }\\n    .form-title[_ngcontent-%COMP%] {\\n      text-align: center;\\n      margin-bottom: 20px;\\n      font-family: 'Arial', sans-serif;\\n      font-size: 28px;\\n      color: #333;\\n      text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);\\n      background-color: #f8f9fa;\\n      padding: 10px;\\n      border-radius: 5px;\\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\\n    }\"]\n  });\n}","map":{"version":3,"names":["Credentials","RegisterComponent","constructor","authService","router","credentials","onRegister","register","username","password","email","subscribe","data","navigate","console","log","error","switchToLogin","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_14_listener","RegisterComponent_Template_input_ngModelChange_19_listener","$event","RegisterComponent_Template_input_ngModelChange_23_listener","RegisterComponent_Template_input_ngModelChange_27_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Juanma\\Documents\\GitHub\\librotech\\src\\app\\componentes\\register.component.ts","C:\\Users\\Juanma\\Documents\\GitHub\\librotech\\src\\app\\componentes\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Credentials } from '../model/credentials.model';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent {\r\n\r\n  credentials: Credentials = new Credentials('', '', ''); \r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  onRegister() {\r\n    this.authService.register(this.credentials.username, this.credentials.password, this.credentials.email)\r\n      .subscribe(\r\n        (data) => {\r\n          this.router.navigate(['/libros']);\r\n\r\n          console.log(\"Usuario registrado exitosamente\", data);\r\n        },\r\n        (error) => {\r\n          console.error(\"Error al registrar usuario\", error);\r\n        }\r\n      );\r\n  }\r\n  switchToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n  \r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>LibroTech - Registro</title>\r\n  <style>\r\n    body {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100vh;\r\n      background-color: #f8f9fa;\r\n    }\r\n    .form-container {\r\n      max-width: 400px;\r\n      padding: 20px;\r\n      border-radius: 10px;\r\n      background-color: #fff;\r\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n    }\r\n    .form-title {\r\n      text-align: center;\r\n      margin-bottom: 20px;\r\n      font-family: 'Arial', sans-serif;\r\n      font-size: 28px;\r\n      color: #333;\r\n      text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);\r\n      background-color: #f8f9fa;\r\n      padding: 10px;\r\n      border-radius: 5px;\r\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mx-auto form-container\">\r\n        <h1 class=\"form-title\">LibroTech</h1>\r\n        <h2 class=\"form-title\">Registro</h2>\r\n        <form #registerForm=\"ngForm\" (ngSubmit)=\"onRegister()\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"registerUsername\" class=\"form-label\">Username</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"registerUsername\" [(ngModel)]=\"credentials.username\" name=\"registerUsername\" required>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"registerPassword\" class=\"form-label\">Password</label>\r\n            <input type=\"password\" class=\"form-control\" id=\"registerPassword\" [(ngModel)]=\"credentials.password\" name=\"registerPassword\" required>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"registerMail\" class=\"form-label\">Mail</label>\r\n            <input type=\"email\" class=\"form-control\" id=\"registerMail\" [(ngModel)]=\"credentials.email\" name=\"registerMail\" required>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-success btn-block\">Register</button>\r\n        </form>\r\n        <p class=\"text-center mt-3\">¿Ya tienes cuenta? <a routerLink=\"/login\">Logueate aquí</a></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</body>\r\n</html>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}