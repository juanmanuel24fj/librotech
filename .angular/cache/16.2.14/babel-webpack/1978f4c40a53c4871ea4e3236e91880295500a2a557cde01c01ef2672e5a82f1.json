{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ReservaService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8086/api/reservas';\n  }\n  crearReserva(reserva) {\n    return this.http.post(this.apiUrl, reserva);\n  }\n  obtenerReservas() {\n    return this.http.get(this.apiUrl);\n  }\n  eliminarReserva(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  reservarLibro(libroId, usuarioId) {\n    return this.http.post(`${this.apiUrl}/reservar/${libroId}/${usuarioId}`, {});\n  }\n  static #_ = this.ɵfac = function ReservaService_Factory(t) {\n    return new (t || ReservaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReservaService,\n    factory: ReservaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ReservaService","constructor","http","apiUrl","crearReserva","reserva","post","obtenerReservas","get","eliminarReserva","id","delete","reservarLibro","libroId","usuarioId","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Juanma\\Documents\\GitHub\\librotech\\src\\app\\services\\reserva.service.ts"],"sourcesContent":["// src/app/services/reserva.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Reserva } from '../model/reserva.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReservaService {\r\n  private apiUrl = 'http://localhost:8086/api/reservas';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  crearReserva(reserva: Reserva): Observable<Reserva> {\r\n    return this.http.post<Reserva>(this.apiUrl, reserva);\r\n  }\r\n\r\n  obtenerReservas(): Observable<Reserva[]> {\r\n    return this.http.get<Reserva[]>(this.apiUrl);\r\n  }\r\n\r\n  eliminarReserva(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n  reservarLibro(libroId: number, usuarioId: number): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/reservar/${libroId}/${usuarioId}`, {});\r\n  }\r\n  \r\n}\r\n"],"mappings":";;AASA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEd;EAEvCC,YAAYA,CAACC,OAAgB;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAU,IAAI,CAACH,MAAM,EAAEE,OAAO,CAAC;EACtD;EAEAE,eAAeA,CAAA;IACb,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAY,IAAI,CAACL,MAAM,CAAC;EAC9C;EAEAM,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE,CAAC;EACvD;EACAE,aAAaA,CAACC,OAAe,EAAEC,SAAiB;IAC9C,OAAO,IAAI,CAACZ,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,aAAaU,OAAO,IAAIC,SAAS,EAAE,EAAE,EAAE,CAAC;EAC9E;EAAC,QAAAC,CAAA,G;qBAlBUf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}