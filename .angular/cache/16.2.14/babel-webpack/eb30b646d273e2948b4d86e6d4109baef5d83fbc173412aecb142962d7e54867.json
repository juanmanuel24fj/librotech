{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginComponent } from './componentes/login.component';\nimport { RegisterComponent } from './componentes/register.component';\nimport { LibrosComponent } from './componentes/libros.component';\nimport { UsuarioComponent } from './componentes/usuario.component';\nimport { ReservaComponent } from './componentes/reserva.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'libros',\n  component: LibrosComponent\n}, {\n  path: 'user',\n  component: UsuarioComponent\n}, {\n  path: 'reservas',\n  component: ReservaComponent\n}, {\n  path: '',\n  redirectTo: '/login',\n  pathMatch: 'full'\n}, {\n  path: '**',\n  redirectTo: '/login'\n}];\nexport class AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","LoginComponent","RegisterComponent","LibrosComponent","UsuarioComponent","ReservaComponent","routes","path","component","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports"],"sources":["C:\\Users\\Juanma\\Documents\\GitHub\\librotech\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { LoginComponent } from './componentes/login.component';\r\nimport { RegisterComponent } from './componentes/register.component';\r\nimport { LibrosComponent } from './componentes/libros.component';\r\nimport { UsuarioComponent } from './componentes/usuario.component';\r\nimport { ReservaComponent } from './componentes/reserva.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'libros', component: LibrosComponent },\r\n  { path: 'user', component: UsuarioComponent },\r\n  { path: 'reservas', component: ReservaComponent },\r\n\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' }, \r\n  { path: '**', redirectTo: '/login' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n"],"mappings":"AAGA,SAASA,YAAY,QAAgB,iBAAiB;AAKtD,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,iBAAiB,QAAQ,kCAAkC;AACpE,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,gBAAgB,QAAQ,iCAAiC;AAClE,SAASC,gBAAgB,QAAQ,iCAAiC;;;AAElE,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEN;AAAiB,CAAE,EAClD;EAAEK,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEP;AAAc,CAAE,EAC5C;EAAEM,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEL;AAAe,CAAE,EAC9C;EAAEI,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEJ;AAAgB,CAAE,EAC7C;EAAEG,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEH;AAAgB,CAAE,EAEjD;EAAEE,IAAI,EAAE,EAAE;EAAEE,UAAU,EAAE,QAAQ;EAAEC,SAAS,EAAE;AAAM,CAAE,EACrD;EAAEH,IAAI,EAAE,IAAI;EAAEE,UAAU,EAAE;AAAQ,CAAE,CACrC;AAMD,OAAM,MAAOE,gBAAgB;EAAA,QAAAC,CAAA,G;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA,G;UAAhBF;EAAgB;EAAA,QAAAG,EAAA,G;cAHjBd,YAAY,CAACe,OAAO,CAACT,MAAM,CAAC,EAC5BN,YAAY;EAAA;;;2EAEXW,gBAAgB;IAAAK,OAAA,GAAAC,EAAA,CAAAjB,YAAA;IAAAkB,OAAA,GAFjBlB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}